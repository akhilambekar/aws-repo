{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    },
	
	"KeyPair": {
      "Description" : "Amazon EC2 Key Pair",
	  "Type" : "AWS::EC2::KeyPair::KeyName"
    },
	
	"YourIp" : {
	  "Description" : "The IP address range will be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "66.41.79.188/32",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/18",
        "Tags": [
          {
            "Key": "Name",
            "Value": "EngineeringVpc"
          }
        ]
      }
    },

    "EngineeringGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
	  "Tags": [
          {
            "Key": "Name",
            "Value": "EngineeringGateway"
          }
        ]
	  }
    },
	
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "EngineeringGateway"
        },
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
	
	"PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
	
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "EngineeringGateway"
        }
      },
      "DependsOn": [
        "EngineeringGateway"
      ]
    },
	
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone" : {
          "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "PublicSubnet1"
          }
        ]
      }
    },
	
	"PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone" : {
          "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "PublicSubnet2"
          }
        ]
      }
    },
	
	"PublicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
	"PublicSubnet2RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      }
    },
	
    "web1": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": {"Ref": "InstanceType"},
		"KeyName" : { "Ref" : "KeyPair" },
        "ImageId": "ami-3ea13f29",
        "SubnetId": { "Ref": "PublicSubnet1" },
        "SecurityGroupIds": [
          { "Ref": "WebserversSG"}
        ],
        "Tags" : [
          { "Key": "Name",
            "Value": "web1"
          }
        ]
      }
    },
	
	"web2": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": {"Ref": "InstanceType"},
		"KeyName" : { "Ref" : "KeyPair" },
        "ImageId": "ami-3ea13f29",
        "SubnetId": { "Ref": "PublicSubnet2" },
        "SecurityGroupIds": [
          { "Ref": "WebserversSG"}
        ],
        "Tags" : [
          { "Key": "Name",
            "Value": "web2"
          }
        ]
      }
    },
	
    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "GroupDescription": "Security group rules for webserver host.",
        "SecurityGroupIngress": [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "YourIp"}
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        } ],
		"Tags" : [
          { "Key": "Name",
            "Value": "WebserversSG"
          }
        ]
      }
    },
	
	"EngineeringLB": {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
	    "SecurityGroups" : [{ "Ref": "WebserversSG" }],
		"Name" : "EngineeringLB",
	    "Tags" : [
          { "Key": "Name",
            "Value": "EngineeringLB"
          }
        ],
		"Subnets" : [{ "Ref": "PublicSubnet1" }, { "Ref": "PublicSubnet2" }]
	  }
    },
	
	"EngineeringListener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "EngineeringWebservers" }
        }],
        "LoadBalancerArn" : { "Ref" : "EngineeringLB" },
        "Port" : "80",
        "Protocol" : "HTTP"
      }
    },
	
	"EngineeringWebservers": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
	    "HealthCheckEnabled" : "True",
		"Targets":[ { "Id":{ "Ref":"web1" }},{ "Id":{ "Ref":"web2" }} ],
		"HealthCheckIntervalSeconds" : 10,
        "HealthCheckTimeoutSeconds" : 5,
        "HealthyThresholdCount" : 3,
		"HealthCheckPath" : "/",
        "Port" : 80,
        "Protocol" : "HTTP",
        "VpcId" : {"Ref" : "EngineeringVpc"},
		"Tags" : [
          { "Key": "Name",
            "Value": "EngineeringWebservers"
          }
        ]
	  }
    }

},
  "Outputs": {
    "WebUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "EngineeringLB",
                "DNSName"
              ]
            }
          ]
        ]
      },
      "Description": "DNSName"
    }
  }
}